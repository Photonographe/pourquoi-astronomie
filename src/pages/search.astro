---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import SearchBar from '../components/SearchBar.astro';
import QuestionItem from '../components/QuestionItem.astro';
import Footer from '../components/Footer.astro';
import { getAllQuestions, searchQuestions } from '../data/questions.ts';

const url = Astro.url;
const searchQuery = url.searchParams.get('q') || '';
const allQuestions = await getAllQuestions();
const searchResults = searchQuery ? await searchQuestions(searchQuery) : [];
---

<Layout 
  title={searchQuery ? `Recherche : ${searchQuery}` : "Recherche"}
  description={searchQuery ? `R√©sultats de recherche pour "${searchQuery}" - Questions d'astronomie pour enfants` : "Recherche dans toutes nos questions d'astronomie pour enfants"}
>
  <Header />
  
  <main class="search-page">
    <!-- Hero Section -->
    <section class="search-hero">
      <div class="container">
        <h1 class="page-title">
          {searchQuery ? `R√©sultats pour "${searchQuery}"` : "Recherche"}
        </h1>
        <p class="page-subtitle">
          {searchQuery 
            ? `${searchResults.length} r√©sultat${searchResults.length > 1 ? 's' : ''} trouv√©${searchResults.length > 1 ? 's' : ''}`
            : "Trouve la r√©ponse √† toutes tes questions sur l'astronomie"
          }
        </p>
        
        <SearchBar initialValue={searchQuery} />
      </div>
    </section>
    
    <!-- Search Results -->
    {searchQuery && (
      <section class="search-results">
        <div class="container">
          {searchResults.length > 0 ? (
            <div class="results-container">
              <div class="results-header">
                <h2>R√©sultats de recherche</h2>
                <p class="results-count">
                  {searchResults.length} question{searchResults.length > 1 ? 's' : ''} trouv√©e{searchResults.length > 1 ? 's' : ''}
                </p>
              </div>
              
              <div class="results-grid">
                {searchResults.map((question, index) => (
                  <QuestionItem question={question} index={index} />
                ))}
              </div>
            </div>
          ) : (
            <div class="no-results">
              <div class="no-results-icon">üîç</div>
              <h2>Aucun r√©sultat trouv√©</h2>
              <p>D√©sol√©, nous n'avons pas trouv√© de r√©ponse pour "<strong>{searchQuery}</strong>".</p>
              <a href="/" class="btn btn-primary">Retour √† l'accueil</a>
            </div>
          )}
        </div>
      </section>
    )}
    
    <!-- Browse All Questions -->
    {!searchQuery && (
      <section class="all-questions">
        <div class="container">
          <h2 class="section-title">Toutes nos questions</h2>
          <p class="section-subtitle">
            Parcours toutes les questions et d√©couvre les myst√®res de l'univers !
          </p>
          
          <div class="questions-grid">
            {allQuestions.slice(0, 6).map((question, index) => (
              <QuestionItem question={question} index={index} />
            ))}
          </div>
        </div>
      </section>
    )}
  </main>
  
  <Footer />
</Layout>

<style>
  .search-page {
    min-height: 80vh;
  }
  
  .search-hero {
    background: linear-gradient(135deg, #0f0c29, #24243e, #302b63);
    padding: var(--space-xl) 0;
    text-align: center;
  }
  
  .page-title {
    font-size: 3rem;
    margin-bottom: 1rem;
    color: var(--color-primary);
  }
  
  .page-subtitle {
    font-size: 1.2rem;
    margin-bottom: 3rem;
    opacity: 0.9;
  }
  
  .search-results {
    padding: var(--space-lg) 0;
  }
  
  .results-header {
    margin-bottom: 2rem;
  }
  
  .results-header h2 {
    color: var(--color-primary);
    margin-bottom: 0.5rem;
  }
  
  .results-count {
    color: rgba(255, 255, 255, 0.8);
    font-size: 1.1rem;
  }
  
  .results-grid {
    max-width: 800px;
    margin: 0 auto;
  }
  
  .no-results {
    text-align: center;
    padding: var(--space-xl) 0;
  }
  
  .no-results-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
    opacity: 0.5;
  }
  
  .no-results h2 {
    color: var(--color-primary);
    margin-bottom: 1rem;
  }
  
  .no-results p {
    font-size: 1.1rem;
    margin-bottom: 2rem;
    opacity: 0.8;
  }
  
  .all-questions {
    padding: var(--space-xl) 0;
    background: rgba(0, 0, 0, 0.2);
  }
  
  .section-title {
    font-size: 2.5rem;
    text-align: center;
    margin-bottom: 1rem;
    color: var(--color-primary);
  }
  
  .section-subtitle {
    text-align: center;
    font-size: 1.1rem;
    opacity: 0.8;
    margin-bottom: 3rem;
  }
  
  .questions-grid {
    max-width: 1000px;
    margin: 0 auto;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }
  
  .btn {
    display: inline-block;
    padding: 1rem 2rem;
    background: var(--color-primary);
    color: var(--color-dark);
    text-decoration: none;
    border-radius: 25px;
    font-weight: bold;
    transition: all 0.3s ease;
  }
  
  .btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(255, 215, 0, 0.3);
  }
  
  :root {
    --color-primary: #ffd700;
    --color-dark: #0f0c29;
    --space-lg: 4rem;
    --space-xl: 6rem;
  }
  
  @media (max-width: 768px) {
    .page-title {
      font-size: 2rem;
    }
  }
</style>
